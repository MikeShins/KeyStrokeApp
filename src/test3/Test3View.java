/*
 * Test3View.java
 */
package test3;

import java.awt.Color;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JDialog;
import javax.swing.JFrame;
import java.util.LinkedList;

/**
 * The application's main frame.
 */
public class Test3View extends FrameView {

    /** keystroke adapters for password field */
    protected KeyStrokeKeyAdapter[] jPasswordFieldKeyAdapter = new KeyStrokeKeyAdapter[6];
    protected KeyStrokeDynamics[] dynamics = new KeyStrokeDynamics[6];
    protected String[] passwords = new String[6];

    /** Constructor
     *
     * @param app
     */
    public Test3View(SingleFrameApplication app) {
        super(app);
        initComponents();
        for (int i = 0; i < 6; i++) {
            jPasswordFieldKeyAdapter[i] = new KeyStrokeKeyAdapter();
            dynamics[i] = new KeyStrokeDynamics();
        }
    }

    /** method for testing if all passwords in password fields are same
     *
     * @param passwords
     * @return true if all passwords are same, false otherwise
     */
    private boolean PasswordsAreValid(String[] passwords) {
        int i = 0;
        while (i < passwords.length - 1) {
            if (passwords[i].equals("")) {
                return false;
            }
            System.out.println(passwords[i]);
            if (!passwords[i].equals(passwords[i + 1])) {
                return false;
            }
            ++i;
        }
        return true;
    }

    @Action
    /** method for showing an info box */
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = Test3App.getApplication().getMainFrame();
            aboutBox = new Test3AboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        Test3App.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        PassReg = new javax.swing.JLabel();
        PassRep = new javax.swing.JLabel();
        jPasswordField0 = new javax.swing.JPasswordField();
        jPasswordField5 = new javax.swing.JPasswordField();
        ButtonVerify = new javax.swing.JButton();
        Status = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPasswordField4 = new javax.swing.JPasswordField();
        Slider = new javax.swing.JSlider();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setMaximumSize(new java.awt.Dimension(344, 130));
        mainPanel.setMinimumSize(new java.awt.Dimension(344, 130));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setOpaque(false);
        mainPanel.setPreferredSize(new java.awt.Dimension(700, 130));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(test3.Test3App.class).getContext().getResourceMap(Test3View.class);
        PassReg.setText(resourceMap.getString("PassReg.text")); // NOI18N
        PassReg.setName("PassReg"); // NOI18N

        PassRep.setText(resourceMap.getString("PassRep.text")); // NOI18N
        PassRep.setName("PassRep"); // NOI18N

        jPasswordField0.setText(resourceMap.getString("jPasswordField0.text")); // NOI18N
        jPasswordField0.setToolTipText(resourceMap.getString("jPasswordField0.toolTipText")); // NOI18N
        jPasswordField0.setName("jPasswordField0"); // NOI18N
        jPasswordField0.setNextFocusableComponent(jPasswordField1);
        jPasswordField0.setRequestFocusEnabled(false);
        jPasswordField0.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField0FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField0FocusLost(evt);
            }
        });

        jPasswordField5.setText(resourceMap.getString("jPasswordField5.text")); // NOI18N
        jPasswordField5.setToolTipText(resourceMap.getString("jPasswordField5.toolTipText")); // NOI18N
        jPasswordField5.setName("jPasswordField5"); // NOI18N
        jPasswordField5.setNextFocusableComponent(ButtonVerify);
        jPasswordField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField5FocusLost(evt);
            }
        });

        ButtonVerify.setText(resourceMap.getString("ButtonVerify.text")); // NOI18N
        ButtonVerify.setEnabled(false);
        ButtonVerify.setFocusTraversalPolicyProvider(true);
        ButtonVerify.setName("ButtonVerify"); // NOI18N
        ButtonVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonVerifyActionPerformed(evt);
            }
        });

        Status.setFont(resourceMap.getFont("Status.font")); // NOI18N
        Status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Status.setText(resourceMap.getString("Status.text")); // NOI18N
        Status.setName("Status"); // NOI18N

        jPasswordField1.setText(resourceMap.getString("jPasswordField1.text")); // NOI18N
        jPasswordField1.setToolTipText(resourceMap.getString("jPasswordField1.toolTipText")); // NOI18N
        jPasswordField1.setName("jPasswordField1"); // NOI18N
        jPasswordField1.setNextFocusableComponent(jPasswordField2);
        jPasswordField1.setRequestFocusEnabled(false);
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusLost(evt);
            }
        });

        jPasswordField2.setText(resourceMap.getString("jPasswordField2.text")); // NOI18N
        jPasswordField2.setToolTipText(resourceMap.getString("jPasswordField2.toolTipText")); // NOI18N
        jPasswordField2.setName("jPasswordField2"); // NOI18N
        jPasswordField2.setNextFocusableComponent(jPasswordField3);
        jPasswordField2.setRequestFocusEnabled(false);
        jPasswordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusLost(evt);
            }
        });

        jPasswordField3.setText(resourceMap.getString("jPasswordField3.text")); // NOI18N
        jPasswordField3.setToolTipText(resourceMap.getString("jPasswordField3.toolTipText")); // NOI18N
        jPasswordField3.setName("jPasswordField3"); // NOI18N
        jPasswordField3.setNextFocusableComponent(jPasswordField4);
        jPasswordField3.setRequestFocusEnabled(false);
        jPasswordField3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField3FocusLost(evt);
            }
        });

        jPasswordField4.setText(resourceMap.getString("jPasswordField4.text")); // NOI18N
        jPasswordField4.setToolTipText(resourceMap.getString("jPasswordField4.toolTipText")); // NOI18N
        jPasswordField4.setName("jPasswordField4"); // NOI18N
        jPasswordField4.setNextFocusableComponent(jPasswordField5);
        jPasswordField4.setRequestFocusEnabled(false);
        jPasswordField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordField4FocusLost(evt);
            }
        });

        Slider.setMajorTickSpacing(20);
        Slider.setPaintTicks(true);
        Slider.setToolTipText(resourceMap.getString("Slider.toolTipText")); // NOI18N
        Slider.setValue(80);
        Slider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Slider.setName("Slider"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(PassReg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPasswordField1)
                            .addComponent(jPasswordField0, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(jPasswordField2)
                            .addComponent(jPasswordField3)
                            .addComponent(jPasswordField4)))
                    .addComponent(Slider, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Status, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                            .addComponent(PassRep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPasswordField5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonVerify, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PassReg)
                    .addComponent(jPasswordField0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PassRep)
                    .addComponent(jPasswordField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonVerify)
                    .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(test3.Test3App.class).getContext().getActionMap(Test3View.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    /** what to do after button is clicked
     *
     * @param evt
     */
    private void ButtonVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonVerifyActionPerformed
        // TODO add your handling code here:
        passwords[0] = new String(jPasswordField0.getPassword());
        passwords[1] = new String(jPasswordField1.getPassword());
        passwords[2] = new String(jPasswordField2.getPassword());
        passwords[3] = new String(jPasswordField3.getPassword());
        passwords[4] = new String(jPasswordField4.getPassword());
        passwords[5] = new String(jPasswordField5.getPassword());

        if (PasswordsAreValid(passwords)) {
            for (int i = 0; i < 6; i++) {
                dynamics[i].setKeyStrokes(jPasswordFieldKeyAdapter[i].getPressed(), jPasswordFieldKeyAdapter[i].getReleased());
                dynamics[i].setFeaturesVector();
                dynamics[i].printFeaturesVector();
            }
            jPasswordField5.setText("");
            jPasswordField5.grabFocus();

            Prototype prototype = new Prototype();
            prototype.setPrototype(dynamics, 5);
            prototype.printPrototype();
            KeyStrokeDynamicsScore dynamicsScore = new KeyStrokeDynamicsScore();
            dynamicsScore.setDynamicsScore(prototype.getPrototype(), dynamics, 5);
            float score = dynamicsScore.getDynamicsScore();

            Status.setText(String.format("%.3f / %d", score, Slider.getValue()));

            if(score < Slider.getValue()) {
                Status.setForeground(Color.red);
            }
            else {
                Status.setForeground(Color.green);
            }
        } else {
            ButtonVerify.setEnabled(false);
            Status.setForeground(Color.red);
            Status.setText("input error");
            jPasswordField5.transferFocus();
        }
    }//GEN-LAST:event_ButtonVerifyActionPerformed

    private void jPasswordField0FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField0FocusGained
        // TODO add your handling code here:
        jPasswordField0.setFocusTraversalKeysEnabled(true);
        jPasswordField0.setText("");
        jPasswordField1.setText("");
        jPasswordField2.setText("");
        jPasswordField3.setText("");
        jPasswordField4.setText("");
        jPasswordField5.setText("");
        ButtonVerify.setEnabled(false);
        
        System.out.println("cistime");
        for (int i = 0; i < 6; i++) {
            jPasswordFieldKeyAdapter[i].clearBuffers();
        }
        jPasswordField0.addKeyListener(jPasswordFieldKeyAdapter[0]);
    }//GEN-LAST:event_jPasswordField0FocusGained

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        // TODO add your handling code here:
        jPasswordField1.setFocusTraversalKeysEnabled(true);
        jPasswordFieldKeyAdapter[1].clearBuffers();
        jPasswordField1.addKeyListener(jPasswordFieldKeyAdapter[1]);

    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusGained
        // TODO add your handling code here:
        jPasswordField2.setFocusTraversalKeysEnabled(true);
        jPasswordFieldKeyAdapter[2].clearBuffers();
        jPasswordField2.addKeyListener(jPasswordFieldKeyAdapter[2]);
    }//GEN-LAST:event_jPasswordField2FocusGained

    private void jPasswordField3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField3FocusGained
        // TODO add your handling code here:
        jPasswordField3.setFocusTraversalKeysEnabled(true);
        jPasswordFieldKeyAdapter[3].clearBuffers();
        jPasswordField3.addKeyListener(jPasswordFieldKeyAdapter[3]);
    }//GEN-LAST:event_jPasswordField3FocusGained

    private void jPasswordField4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField4FocusGained
        // TODO add your handling code here:
        jPasswordField4.setFocusTraversalKeysEnabled(true);
        jPasswordFieldKeyAdapter[4].clearBuffers();
        jPasswordField4.addKeyListener(jPasswordFieldKeyAdapter[4]);
    }//GEN-LAST:event_jPasswordField4FocusGained

    private void jPasswordField5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField5FocusGained
        // TODO add your handling code here:
        jPasswordField5.setFocusTraversalKeysEnabled(true);
        jPasswordFieldKeyAdapter[5].clearBuffers();
        jPasswordField5.addKeyListener(jPasswordFieldKeyAdapter[5]);
        ButtonVerify.setEnabled(true);
    }//GEN-LAST:event_jPasswordField5FocusGained

    private void jPasswordField5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField5FocusLost
        // TODO add your handling code here:
        jPasswordField5.removeKeyListener(jPasswordFieldKeyAdapter[5]);
    }//GEN-LAST:event_jPasswordField5FocusLost

    private void jPasswordField0FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField0FocusLost
        // TODO add your handling code here:
        jPasswordField0.removeKeyListener(jPasswordFieldKeyAdapter[0]);
    }//GEN-LAST:event_jPasswordField0FocusLost

    private void jPasswordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusLost
        // TODO add your handling code here:
        jPasswordField1.removeKeyListener(jPasswordFieldKeyAdapter[1]);
    }//GEN-LAST:event_jPasswordField1FocusLost

    private void jPasswordField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusLost
        // TODO add your handling code here:
        jPasswordField2.removeKeyListener(jPasswordFieldKeyAdapter[2]);
    }//GEN-LAST:event_jPasswordField2FocusLost

    private void jPasswordField3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField3FocusLost
        // TODO add your handling code here:
        jPasswordField3.removeKeyListener(jPasswordFieldKeyAdapter[3]);
    }//GEN-LAST:event_jPasswordField3FocusLost

    private void jPasswordField4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField4FocusLost
        // TODO add your handling code here:
        jPasswordField4.removeKeyListener(jPasswordFieldKeyAdapter[4]);
    }//GEN-LAST:event_jPasswordField4FocusLost
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonVerify;
    private javax.swing.JLabel PassReg;
    private javax.swing.JLabel PassRep;
    private javax.swing.JSlider Slider;
    private javax.swing.JLabel Status;
    private javax.swing.JPasswordField jPasswordField0;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JPasswordField jPasswordField5;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables
    private JDialog aboutBox;
}
